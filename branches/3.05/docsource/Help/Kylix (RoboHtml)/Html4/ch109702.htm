<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
 <HEAD>
  <!-- $MVD$:app("RoboHELP HTML Edition by Blue Sky Software, portions by MicroVision Dev. Inc.","769") -->
  <!-- $MVD$:template("","0","0") -->
  <TITLE>TAbZipArchive.InsertFromStreamHelper</TITLE>
  <META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=Windows-1252">
  <SCRIPT LANGUAGE="javascript" TITLE="BSSC Special Effects" SRC="BSSCDHTM.js">
</SCRIPT>
 <META NAME="generator" CONTENT="RoboHELP by Blue Sky Software www.blue-sky.com HTML Edition">
 <META NAME="MS-HKWD" CONTENT="InsertFromStreamHelper"></HEAD>
  <BODY BGCOLOR="WHITE" TEXT="BLACK" ONLOAD="BSSCOnLoad();" ONCLICK="BSSCOnClick();" ONUNLOAD="BSSCOnUnload();">
  <H1>
   TAbZipArchive.InsertFromStreamHelper</H1>
  <P>
   <A HREF="ch100uat.htm">TAbZipArchive</A></P><PRE><CODE><B>property</B> InsertFromStreamHelper :</CODE><BR><CODE>  TAbArchiveItemInsertFromStreamEvent</CODE><BR><CODE>TAbArchiveItemInsertFromStreamEvent = <B>procedure</B>(</CODE><BR><CODE>  Sender : TObject; Item : TAbArchiveItem;</CODE><BR><CODE>  OutStream, InStream : TStream) <B>of object</B>;</CODE></PRE><P>
   Defines an event handler that is called whenever an archive item is 
   to be created directly from a TStream descendant.</P>
  <P>
   The InsertFromStreamHelper event handler must be supplied in order 
   for the ZipArchive to create items directly from a stream. InStream 
   is the uncompressed TStream descendant, and OutStream is the 
   compressed TStream descendant. The event handler is responsible for 
   reading the uncompressed stream, compressing the data, and writing it 
   out to the compressed stream. Typically this is done by simply 
   passing the information on to the AbZipFromStream procedure defined 
   in unit AbZipPrc.</P>
  <P>
   The following example creates an item directly from a TMemoryStream:</P><PRE><CODE><B>procedure</B> ZipHelper(Sender : TObject; Item : TAbArchiveItem; OutStream, InStream : TStream);</CODE><BR><CODE><B>begin</B></CODE><BR><CODE>  <B>if</B> Assigned(InStream) <B>then</B></CODE><BR><CODE>    AbZipFromStream(TAbZipArchive(Sender), TAbZipItem(Item),</CODE><BR><CODE>      OutStream, InStream);</CODE><BR><CODE><B>end</B>;</CODE><BR><CODE><B>procedure</B> AddFileFromStream(</CODE><BR><CODE>  <B>const</B> ArchiveName, NewName : <B>string</B>; </CODE><BR><CODE>    FromStream : TMemoryStream);</CODE><BR><CODE><B>var</B></CODE><BR><CODE>  ZipArchive : TAbZipArchive;</CODE><BR><CODE><B>begin</B></CODE><BR><CODE>  ZipArchive := TAbZipArchive.Create(ArchiveName,</CODE><BR><CODE>    fmOpenWrite <B>or</B>  fmShareDenyNone);</CODE><BR><CODE>  <B>try</B></CODE><BR><CODE>    ZipArchive.Load;</CODE><BR><CODE>    ZipArchive.InsertFromStreamHelper := ZipHelper;</CODE><BR><CODE>    FromStream.Position := 0;</CODE><BR><CODE>    ZipArchive.AddFromStream(NewName, FromStream);</CODE><BR><CODE>  <B>finally</B></CODE><BR><CODE>    ZipArchive.Free;</CODE><BR><CODE>  <B>end</B>;</CODE><BR><CODE><B>end</B>;</CODE></PRE><P>
   See also: <A HREF="ch1016lu.htm">InsertHelper</A>
 </BODY>
</HTML>